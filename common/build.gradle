plugins {
    id 'java'
    id 'nu.studer.jooq' version '10.0'
}

group = 'com.omnia'
version = '1.0.0'

repositories {
    mavenCentral()
}

ext {
    postgresqlVersion = '42.7.5'
    jooqVersion = '3.19.7'
    snakeyamlVersion = '2.4'
    hikariVersion = '6.2.1'
    junitVersion = '5.12.0'
}


dependencies {
    // Runtime database connection
    implementation "org.postgresql:postgresql:$postgresqlVersion"
    implementation "org.jooq:jooq:$jooqVersion"

    // JOOQ code generation from SQL files
    jooqGenerator "org.jooq:jooq-meta-extensions:$jooqVersion"

    // SnakeYAML
    implementation "org.yaml:snakeyaml:$snakeyamlVersion"

    // HikariCP
    implementation "com.zaxxer:HikariCP:$hikariVersion"

    // JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

jooq {
    configurations {
        main {
            generationTool {
                jdbc {
                    driver = 'org.h2.Driver'
                    url = 'jdbc:h2:mem:generator;MODE=PostgreSQL'
                }
                generator {
                    database {
                        name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                        properties {
                            property {
                                key = 'scripts'
                                value = 'src/main/resources/schema.sql'
                            }
                            property {
                                key = 'dialect'
                                value = 'POSTGRES'
                            }
                        }
                    }
                    target {
                        packageName = 'com.omnia.jooq'
                        directory = 'build/generated-src/jooq/main'
                    }
                }
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'build/generated-src/jooq/main'
        }
    }
}

test {
    useJUnitPlatform()
}